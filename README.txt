This is C++ implementation of PSDQ (Privacy-preserving Simplicial Depth Query) to achieve privacy-preserving simplicial depth query over collaborative cloud servers. The equivalent plaintext version has been implemented by Java.

Paper title: Achieve privacy-preserving simplicial depth query over collaborative cloud servers

The simplicial depth (SD) of a query point q in R^d with respect to a dataset S (subset R^d) is defined based on counting all (d+1)-dimensional simplices obtained from S that contain q. The simplicial depth is a ranking function which is frequently used in order to sort a multivariate dataset. In the higher dimension d, no better algorithm is known than the brute force method which takes Theta(n^{d+1}) time, where |S|=n. Unfortunately, in contrast to the many advantages that have been previously identified by research studies, this depth function requires a massive amount of computation particularly for higher dimensional datasets. This challenge could be overcome by offloading the computation to cloud servers. However, delegating simplicial depth queries to not fully trusted cloud servers would be a source of serious security breaches and privacy issues. Therefore, in this paper, we target the privacy-preserving simplicial depth query over collaborative cloud servers. To this end, two resource-abundant cloud servers will be employed to perform such time consuming computation while maintaining the user's privacy.
Security analysis shows our proposed scheme achieves privacy-preserving requirements. In addition, some experiments based on a dataset generated by normal distribution are conducted, and the results validate the efficiency and practicality of our proposed scheme. Although this work only focuses on the planar case, our proposed scheme can be extended into higher dimension cases without significant alterations.

@article{mahdikhani2020achieve,
  title={Achieve privacy-preserving simplicial depth query over collaborative cloud servers},
  author={Mahdikhani, Hassan and Shahsavarifar, Rasoul and Lu, Rongxing and Bremner, David},
  journal={Peer-to-Peer Networking and Applications},
  volume={13},
  number={1},
  pages={412--423},
  year={2020},
  publisher={Springer}
}
